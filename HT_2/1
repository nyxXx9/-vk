#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>
//-------------------------------------------------------------------------------------------------
bool hasCycle(Node* head); //прототип ф-ии
//-------------------------------------------------------------------------------------------------
typedef struct Node {
    int data;
    struct Node* next;
} Node; // создаем короткое имя Node вместо struct Node
//-------------------------------------------------------------------------------------------------
int main() {
    //список без цикла: 1 -> 2 -> 3 -> 4 -> NULL
    Node* head = (Node*)malloc(sizeof(Node));
    head->data = 1;

    Node* second = (Node*)malloc(sizeof(Node));
    second->data = 2;
    head->next = second;

    Node* third = (Node*)malloc(sizeof(Node));
    third->data = 3;
    second->next = third;

    Node* fourth = (Node*)malloc(sizeof(Node));
    fourth->data = 4;
    third->next = fourth;
    fourth->next = NULL;

    printf("Список без цикла: %s\n", hasCycle(head) ? "есть цикл" : "нет цикла"); //<?>- если истина; <:>-иначе

    //циклический список: 1 -> 2 -> 3 -> 4 -> 2 (цикл)
    fourth->next = second; // создаем цикл

    printf("Список с циклом: %s\n", hasCycle(head) ? "есть цикл" : "нет цикла");

    // Освобождаем память
    fourth->next = NULL;
    free(fourth);
    free(third);
    free(second);
    free(head);

    return 0;
}
//-------------------------------------------------------------------------------------------------
bool hasCycle(Node* head) {
    if (head == NULL || head->next == NULL) {
        return false;
    }

    Node* slow = head;
    Node* fast = head->next;

    while (slow != fast) {
        if (fast == NULL || fast->next == NULL) {
            return false;
        }
        slow = slow->next;
        fast = fast->next->next;
    }
    return true;
}

